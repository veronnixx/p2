Script started on Tue 07 Apr 2015 08:35:45 PM PDT
]0;veronnixx@big-tesla: ~/P2veronnixx@big-tesla:~/P2$ gdb a.out
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) h
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) r
Starting program: /home/veronnixx/P2/a.out 
Enter upper bound:
20

Program received signal SIGSEGV, Segmentation fault.
0x00007ffff7a6c742 in _IO_vfscanf_internal (s=<optimized out>, format=<optimized out>, 
    argptr=argptr@entry=0x7fffffffde28, errp=errp@entry=0x0) at vfscanf.c:1857
1857	vfscanf.c: No such file or directory.
(gdb) bt
#0  0x00007ffff7a6c742 in _IO_vfscanf_internal (s=<optimized out>, format=<optimized out>, 
    argptr=argptr@entry=0x7fffffffde28, errp=errp@entry=0x0) at vfscanf.c:1857
#1  0x00007ffff7a72ed9 in __isoc99_scanf (format=<optimized out>) at isoc99_scanf.c:37
#2  0x0000000000400616 in main () at main.c:17
(gdb) l 17
12	in vfscanf.c
(gdb) l mainc:17
No source file named mainc.
(gdb) l mainc:17[C.nc:17[C[1Pc:17[1Pc:17nc:17.c:17
12	int main()
13	{
14	  int i;
15	
16	  printf("Enter upper bound:\n");
17	  scanf("%d", UpperBound);
18	
19	  Prime[1] = 1;
20	  Prime[2] = 1;
21	
(gdb) l main
8	
9	int Prime[50],  /* Prime[i] will be 1 if i is prime, 0 otherwise */
10	UpperBound; /* check all number up through this one for primeness */
11	
12	int main()
13	{
14	  int i;
15	
16	  printf("Enter upper bound:\n");
17	  scanf("%d", UpperBound);
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) 
Please answer y or n.
The program being debugged has been started already.
Start it from the beginning? (y or n) y
`/home/veronnixx/P2/a.out' has changed; re-reading symbols.
Starting program: /home/veronnixx/P2/a.out 
Enter upper bound:
20

Program received signal SIGSEGV, Segmentation fault.
0x000000000040069f in CheckPrime (K=3, Prime=0x6010a0 <Prime>) at prime.c:13
13	    if (Prime[J] == 1)
(gdb) p J
$1 = 984
(gdb) l CheckPrime
1	CheckPrime(int K, int Prime[])
2	{
3	  int J;
4	
5	  /* the plan:  see if J divides K, for all values J which are
6	  *       (a) themselves prime (no need to try J if it is nonprime), and
7	  *       (b) less than or equal to sqrt(K) (if K has a divisor larger
8	  *               than this square root, it must also have a smaller one,
9	  *               so no need to check for larger ones) */
10	
(gdb) 
11	  J = 1;
12	  while (1)  {
13	    if (Prime[J] == 1)
14	      if (J % K == 0)  {
15	        Prime[K] = 0;
16	        return;
17	      } /* if */
18	    J++;
19	  } /* while */
20	
(gdb) k
Kill the program being debugged? (y or n) y^[[A^[[A
(gdb) k
The program is not being run.
(gdb) r
`/home/veronnixx/P2/a.out' has changed; re-reading symbols.
Starting program: /home/veronnixx/P2/a.out 
Enter upper bound:
20
[Inferior 1 (process 11597) exited normally]
(gdb) Ð¸ ÑŒÑ„ÑˆÑ‚[K[K[K[K[K[Kb main
Breakpoint 1 at 0x4005f5: file main.c, line 16.
(gdb) r
Starting program: /home/veronnixx/P2/a.out 

Breakpoint 1, main () at main.c:16
16	  printf("Enter upper bound:\n");
(gdb) n
Enter upper bound:
17	  scanf("%d", &UpperBound);
(gdb) n
20
19	  Prime[1] = 1;
(gdb) p Upperbound
No symbol "Upperbound" in current context.
(gdb) p UpperBound
$2 = 20
(gdb) s
20	  Prime[2] = 1;
(gdb) s
22	  for (i = 3; i <= UpperBound; i += 2) {
(gdb) s
23	    CheckPrime(i, Prime);
(gdb) n
24	    if (Prime[i]) 
(gdb) s
22	  for (i = 3; i <= UpperBound; i += 2) {
(gdb) p Prime 3[K[K[3]
$3 = 0
(gdb) b CheckPrime
Breakpoint 2 at 0x400684: file prime.c, line 11.
(gdb) k
Kill the program being debugged? (y or n) y
(gdb) r
Starting program: /home/veronnixx/P2/a.out 

Breakpoint 1, main () at main.c:16
16	  printf("Enter upper bound:\n");
(gdb) c
Continuing.
Enter upper bound:
20

Breakpoint 2, CheckPrime (K=3, Prime=0x6010a0 <Prime>) at prime.c:11
11	  J = 1;
(gdb) disp J
1: J = 0
(gdb) s
13	    if (Prime[J] == 1)
1: J = 1
(gdb) disp J
2: J = 1
(gdb) s
14	      if (K % J == 0)  {
2: J = 1
1: J = 1
(gdb) s
15	        Prime[K] = 0;
2: J = 1
1: J = 1
(gdb) s
16	        return;
2: J = 1
1: J = 1
(gdb) undisp 2
(gdb) l[Kk
Kill the program being debugged? (y or n) y
(gdb) d 1
(gdb) r
`/home/veronnixx/P2/a.out' has changed; re-reading symbols.
Starting program: /home/veronnixx/P2/a.out 
Enter upper bound:
20

Breakpoint 2, CheckPrime (K=3, Prime=0x6010a0 <Prime>) at prime.c:11
11	  J = 2;
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x000000000040069f in CheckPrime (K=3, Prime=0x6010a0 <Prime>) at prime.c:13
13	    if (Prime[J] == 1)
(gdb) p J
$4 = 984
(gdb) k
Kill the program being debugged? (y or n) y
(gdb) d
Delete all breakpoints? (y or n) y4 
(gdb) r
`/home/veronnixx/P2/a.out' has changed; re-reading symbols.
Starting program: /home/veronnixx/P2/a.out 
Enter upper bound:
20
3 is a prime
5 is a prime
7 is a prime
11 is a prime
13 is a prime
17 is a prime
19 is a prime
[Inferior 1 (process 12475) exited normally]
(gdb) q
]0;veronnixx@big-tesla: ~/P2veronnixx@big-tesla:~/P2$ exit
exit

Script done on Tue 07 Apr 2015 10:22:40 PM PDT
